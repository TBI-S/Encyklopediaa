// <auto-generated />
using Encyklopediaa.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Encyklopediaa.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240613085947_Encyklopedia200")]
    partial class Encyklopedia200
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Encyklopediaa.Models.Objects.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("Encyklopediaa.Models.Objects.Artykul", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("RodzinaID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UżytkownikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("RodzinaID");

                    b.HasIndex("UżytkownikId");

                    b.ToTable("Artykul");
                });

            modelBuilder.Entity("Encyklopediaa.Models.Objects.Gatunek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RodzinaId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RodzinaId");

                    b.ToTable("Gatunek");
                });

            modelBuilder.Entity("Encyklopediaa.Models.Objects.Rodzina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rodzina");
                });

            modelBuilder.Entity("Encyklopediaa.Models.Objects.Siedlisko", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Siedlisko");
                });

            modelBuilder.Entity("Encyklopediaa.Models.Objects.Użytkownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Użytkownik");
                });

            modelBuilder.Entity("GatunekSiedlisko", b =>
                {
                    b.Property<int>("GatuneksId")
                        .HasColumnType("int");

                    b.Property<int>("SiedliskosId")
                        .HasColumnType("int");

                    b.HasKey("GatuneksId", "SiedliskosId");

                    b.HasIndex("SiedliskosId");

                    b.ToTable("GatunekSiedlisko");
                });

            modelBuilder.Entity("Encyklopediaa.Models.Objects.Artykul", b =>
                {
                    b.HasOne("Encyklopediaa.Models.Objects.Admin", "Admin")
                        .WithMany("Artykułss")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Encyklopediaa.Models.Objects.Rodzina", "Rodzina")
                        .WithMany("Artykułs")
                        .HasForeignKey("RodzinaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Encyklopediaa.Models.Objects.Użytkownik", "Użytkownik")
                        .WithMany("Artykułs")
                        .HasForeignKey("UżytkownikId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Rodzina");

                    b.Navigation("Użytkownik");
                });

            modelBuilder.Entity("Encyklopediaa.Models.Objects.Gatunek", b =>
                {
                    b.HasOne("Encyklopediaa.Models.Objects.Rodzina", "Rodzina")
                        .WithMany("Gatuneks")
                        .HasForeignKey("RodzinaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Rodzina");
                });

            modelBuilder.Entity("GatunekSiedlisko", b =>
                {
                    b.HasOne("Encyklopediaa.Models.Objects.Gatunek", null)
                        .WithMany()
                        .HasForeignKey("GatuneksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Encyklopediaa.Models.Objects.Siedlisko", null)
                        .WithMany()
                        .HasForeignKey("SiedliskosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Encyklopediaa.Models.Objects.Admin", b =>
                {
                    b.Navigation("Artykułss");
                });

            modelBuilder.Entity("Encyklopediaa.Models.Objects.Rodzina", b =>
                {
                    b.Navigation("Artykułs");

                    b.Navigation("Gatuneks");
                });

            modelBuilder.Entity("Encyklopediaa.Models.Objects.Użytkownik", b =>
                {
                    b.Navigation("Artykułs");
                });
#pragma warning restore 612, 618
        }
    }
}
